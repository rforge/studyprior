
S3method(mean,mixture.prior)
S3method(print,mixture.prior)
S3method(plot,mixture.prior)
S3method(update,mixture.prior)
export(VP)
export(binom.Beta.EB)
export(binom.Bias.FB)
export(binom.MAP.EB)
export(binom.MAP.FB)
export(binom.PP.EB)
export(binom.PP.EB.Beta)
export(binom.PP.EB.Sep)
export(binom.PP.FB)
export(binom.PP.FB.MC)
export(binom.PP.FB.MC.BE)
export(binom.PP.FB.MC.COR)
export(binom.PP.FB.COR)
export(binom.PP.FIX)
export(binom.prior)
export(bool.mat.plot)
export(calc.MSE)
export(calc.MSE.mean)
export(calc.MSE.mode)
export(calc.bias)
export(calc.coverage)
export(calc.power)
export(conj.approx)
export(calc.posterior)
export(create.mixture.prior)
export(ess.mixture.prior)
export(eval.mixture.prior)
export(normal.PP.FB.INLA)
export(normal.PP.FB.MC)
export(p.mixture.prior)

export(posterior.mixture.prior)
export(q.mixture.prior)
export(sample.mixture.prior)
export(sig.matrix)

export(var.mixture.prior)

importFrom(mvtnorm,rmvnorm)

importFrom(parallel, mclapply, mcmapply)

importFrom("graphics", "abline", "box", "lines", "plot", "rect")

importFrom("stats", "approxfun", "dbeta", "dbinom", "dnorm",
             "integrate", "optimise", "optimize", "pbeta", "pnorm",
             "rbeta", "rnorm", "runif", "smooth.spline", "splinefun",
             "uniroot", "weights")

importFrom("cubature", "adaptIntegrate")

importFrom("INLA", 'inla.dmarginal', 'inla.smarginal', 'f',
           'inla.hpdmarginal', 'inla.mmarginal', 'inla')

importFrom("VGAM", 'dbetabinom.ab')